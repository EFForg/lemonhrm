<?php

/**
 * BaseCustomer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $customerId
 * @property integer $is_deleted
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $Project
 * 
 * @method integer             getCustomerId()  Returns the current record's "customerId" value
 * @method integer             getIsDeleted()   Returns the current record's "is_deleted" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getProject()     Returns the current record's "Project" collection
 * @method Customer            setCustomerId()  Sets the current record's "customerId" value
 * @method Customer            setIsDeleted()   Sets the current record's "is_deleted" value
 * @method Customer            setName()        Sets the current record's "name" value
 * @method Customer            setDescription() Sets the current record's "description" value
 * @method Customer            setProject()     Sets the current record's "Project" collection
 * 
 * @package    orangehrm
 * @subpackage model\admin\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomer extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ohrm_customer');
        $this->hasColumn('customer_id as customerId', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('is_deleted', 'integer', 1, array(
             'type' => 'integer',
             'default' => '0',
             'length' => 1,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Project', array(
             'local' => 'customer_id',
             'foreign' => 'customer_id'));
    }
}