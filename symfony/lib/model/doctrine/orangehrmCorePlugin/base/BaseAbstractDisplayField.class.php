<?php

/**
 * BaseAbstractDisplayField
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $reportGroupId
 * @property string $name
 * @property string $label
 * @property string $fieldAlias
 * @property string $isSortable
 * @property string $sortOrder
 * @property string $sortField
 * @property string $elementType
 * @property string $elementProperty
 * @property string $width
 * @property string $isExportable
 * @property string $textAlignmentStyle
 * @property boolean $isValueList
 * @property integer $display_field_group_id
 * @property string $defaultValue
 * @property boolean $isEncrypted
 * @property boolean $is_meta
 * @property ReportGroup $ReportGroup
 * @property DisplayFieldGroup $DisplayFieldGroup
 * 
 * @method integer              getReportGroupId()          Returns the current record's "reportGroupId" value
 * @method string               getName()                   Returns the current record's "name" value
 * @method string               getLabel()                  Returns the current record's "label" value
 * @method string               getFieldAlias()             Returns the current record's "fieldAlias" value
 * @method string               getIsSortable()             Returns the current record's "isSortable" value
 * @method string               getSortOrder()              Returns the current record's "sortOrder" value
 * @method string               getSortField()              Returns the current record's "sortField" value
 * @method string               getElementType()            Returns the current record's "elementType" value
 * @method string               getElementProperty()        Returns the current record's "elementProperty" value
 * @method string               getWidth()                  Returns the current record's "width" value
 * @method string               getIsExportable()           Returns the current record's "isExportable" value
 * @method string               getTextAlignmentStyle()     Returns the current record's "textAlignmentStyle" value
 * @method boolean              getIsValueList()            Returns the current record's "isValueList" value
 * @method integer              getDisplayFieldGroupId()    Returns the current record's "display_field_group_id" value
 * @method string               getDefaultValue()           Returns the current record's "defaultValue" value
 * @method boolean              getIsEncrypted()            Returns the current record's "isEncrypted" value
 * @method boolean              getIsMeta()                 Returns the current record's "is_meta" value
 * @method ReportGroup          getReportGroup()            Returns the current record's "ReportGroup" value
 * @method DisplayFieldGroup    getDisplayFieldGroup()      Returns the current record's "DisplayFieldGroup" value
 * @method AbstractDisplayField setReportGroupId()          Sets the current record's "reportGroupId" value
 * @method AbstractDisplayField setName()                   Sets the current record's "name" value
 * @method AbstractDisplayField setLabel()                  Sets the current record's "label" value
 * @method AbstractDisplayField setFieldAlias()             Sets the current record's "fieldAlias" value
 * @method AbstractDisplayField setIsSortable()             Sets the current record's "isSortable" value
 * @method AbstractDisplayField setSortOrder()              Sets the current record's "sortOrder" value
 * @method AbstractDisplayField setSortField()              Sets the current record's "sortField" value
 * @method AbstractDisplayField setElementType()            Sets the current record's "elementType" value
 * @method AbstractDisplayField setElementProperty()        Sets the current record's "elementProperty" value
 * @method AbstractDisplayField setWidth()                  Sets the current record's "width" value
 * @method AbstractDisplayField setIsExportable()           Sets the current record's "isExportable" value
 * @method AbstractDisplayField setTextAlignmentStyle()     Sets the current record's "textAlignmentStyle" value
 * @method AbstractDisplayField setIsValueList()            Sets the current record's "isValueList" value
 * @method AbstractDisplayField setDisplayFieldGroupId()    Sets the current record's "display_field_group_id" value
 * @method AbstractDisplayField setDefaultValue()           Sets the current record's "defaultValue" value
 * @method AbstractDisplayField setIsEncrypted()            Sets the current record's "isEncrypted" value
 * @method AbstractDisplayField setIsMeta()                 Sets the current record's "is_meta" value
 * @method AbstractDisplayField setReportGroup()            Sets the current record's "ReportGroup" value
 * @method AbstractDisplayField setDisplayFieldGroup()      Sets the current record's "DisplayFieldGroup" value
 * 
 * @package    orangehrm
 * @subpackage model\core\base
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAbstractDisplayField extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('abstract_display_field');
        $this->hasColumn('report_group_id as reportGroupId', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('field_alias as fieldAlias', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_sortable as isSortable', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('sort_order as sortOrder', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('sort_field as sortField', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('element_type as elementType', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('element_property as elementProperty', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('width', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_exportable as isExportable', 'string', 10, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 10,
             ));
        $this->hasColumn('text_alignment_style as textAlignmentStyle', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('is_value_list as isValueList', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('display_field_group_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             ));
        $this->hasColumn('default_value as defaultValue', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_encrypted as isEncrypted', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('is_meta', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ReportGroup', array(
             'local' => 'report_group_id',
             'foreign' => 'reportGroupId',
             'onDelete' => 'cascade'));

        $this->hasOne('DisplayFieldGroup', array(
             'local' => 'display_field_group_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));
    }
}